pipeline {
    agent any

    environment {
        NODE_VERSION = '20.x' 
        RENDER_API_KEY = credentials('jenkins-render')
        SERVICE_ID = 'srv-crnuooij1k6c739cli9g' 
        RENDER_URL = 'https://igallery.onrender.com'  
        herokuUrl = 'https://igallery-jenkins-3014fbcdc418.herokuapp.com/'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    git branch: 'master', url: 'https://github.com/GacheruIan/gallery.git'
                }
            }
        }

        stage('Install Node.js') {
            steps {
                echo 'Installing Node.js...'
                sh 'curl -sL https://deb.nodesource.com/setup_${NODE_VERSION} | sudo bash -'
                sh 'sudo apt-get install -y nodejs'
                sh 'node -v'
                sh 'npm -v'
            }
        }

        stage('Install Project Dependencies') {
            steps {
                echo 'Installing project dependencies using npm...'
                sh 'npm install'
            }
        }

        stage('Start Application') {
            steps {
                echo 'Starting application...'
                sh 'npm start &'
                sleep 5
                echo 'Application started'
            }
        }

        stage('Install psmisc') { 
            steps {
                echo 'Installing psmisc (for fuser command)...'
                sh 'sudo apt-get install -y psmisc'
            }
        }

        stage('Run Tests') {
            steps {
                 echo 'Killing processes using port 5000...'
                 sh 'fuser -k 5000/tcp || true'  
                 echo 'Running tests...'
                 sh 'npm test'
            }          
        }

        stage('Deploy to Render') {
            steps {
                echo 'Deploying the application to Render...'
                sh '''
                curl -X POST \
                -H "Accept: application/json" \
                -H "Authorization: Bearer ${RENDER_API_KEY}" \
                https://api.render.com/v1/services/${SERVICE_ID}/deploys
                '''
            }
        }
        stage('Deploy to Heroku') {
            steps {
                withCredentials([usernameColonPassword(credentialsId: ' a7ad64e8-289a-47a8-845a-5fa47653498f', variable: 'HEROKU_CREDENTIALS' )]){
                sh 'git push https://${HEROKU_CREDENTIALS}@git.heroku.com/igallery-jenkins.git     master'
    }
  }
} 

    }

    post {
        success {
            script {
                echo 'Deployment successful!'
                def buildId = "${env.BUILD_ID}"
                def renderUrl = "${env.RENDER_URL}"
                def slackMessage = "Deployment is successful! The build ID is: ${buildId}. App URL: ${renderUrl} Heroku URL: ${herokuUrl}"

                slackSend (color: '#36a64f', message: slackMessage)
                mail to: 'gacheruian99@gmail.com',
                     subject: "Build Success: ${env.JOB_NAME} - ${env.BUILD_NUMBER}",
                     body: "Pipeline Succeeded."
            }
        }
        failure {
            script {
                echo 'Build failed'
                mail to: 'gacheruian99@gmail.com',
                     subject: "Build Failed: ${env.JOB_NAME} - ${env.BUILD_NUMBER}",
                     body: "Pipeline failed. Please check the Jenkins logs for details."
            }
        }
    }
}
